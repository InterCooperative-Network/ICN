[workspace]
members = [
    "backend",
    "crates/icn-types",
    "crates/icn-core",
    "crates/icn-runtime",
    "crates/icn-p2p",
    "crates/icn-storage"
]

[workspace.dependencies]
# Internal crates
icn-types = { path = "crates/icn-types" }
icn-core = { path = "crates/icn-core" }
icn-runtime = { path = "crates/icn-runtime" }

# External dependencies
tokio = { version = "1", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
warp = "0.3"
sqlx = { version = "0.8.3", features = ["runtime-tokio-rustls", "postgres"] }
thiserror = "1.0"
chrono = { version = "0.4.40", features = ["serde"] }
async-trait = "0.1"
futures = "0.3.31"  # Downgraded
tracing = "0.1.41"
sha2 = "0.10.8"
rayon = "1.10.0"
lazy_static = "1.5.0"
serde_json = "1.0.140"
log = "0.4"
env_logger = "0.11.6"
x25519-dalek = "2.0.1"
libsqlite3-sys = "0.30.1"

[package]
name = "icn"
version = "0.1.0"
description = "Inter-Cooperative Network - A platform for cooperative resource sharing and governance"
edition = "2021"

[features]
default = ["basic", "federation"]  # Added federation to default features
basic = []
federation = ["dep:tokio", "dep:async-trait"]
advanced-governance = ["dep:parity-scale-codec"]
monitoring = ["dep:prometheus"]

[dependencies]
icn-types = { workspace = true }
tokio = { workspace = true, optional = true }  # Added optional = true
warp = { workspace = true }
async-trait = { workspace = true, optional = true }
parity-scale-codec = { version = "3.7.4", optional = true }
prometheus = { version = "0.13.4", optional = true }
serde = { workspace = true }
icn-core = { workspace = true }
log = { workspace = true }
env_logger = { workspace = true }
pest = "2.7.15"
pest_derive = "2.7.15"
serde_json = { workspace = true }
chrono = { workspace = true }
futures = { workspace = true }
tokio-tungstenite = "0.26.2"
icn-p2p = { path = "crates/icn-p2p" }

[lib]
name = "icn_lib"
path = "src/lib.rs"

[[bin]]
name = "icn_bin"
path = "src/main.rs"

[[example]]
name = "sdp_federation_example"
path = "examples/sdp_federation_example.rs"
