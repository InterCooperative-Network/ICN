name: ICN Backend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Cache Frontend dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Cache Test Results
      uses: actions/cache@v2
      with:
        path: ~/.cargo/test-results
        key: ${{ runner.os }}-test-results-${{ hashFiles('**/*.rs') }}
        restore-keys: |
          ${{ runner.os }}-test-results-

    - name: Build Backend
      run: cargo build --verbose

    - name: Run Unit Tests
      run: cargo test --verbose

    - name: Integration Tests
      run: cargo test --test integration_test --verbose

    - name: Run Clippy
      run: cargo clippy -- -D warnings

    - name: Run Format Check
      run: cargo fmt -- --check

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install Frontend Dependencies
      run: npm install
      working-directory: frontend

    - name: Build Frontend
      run: npm run build
      working-directory: frontend

    - name: Run Frontend Tests
      run: npm test
      working-directory: frontend

    - name: Run Accessibility Tests
      run: npm run test:accessibility
      working-directory: frontend

    - name: Run Responsiveness Tests
      run: npm run test:responsiveness
      working-directory: frontend
